swagger: '2.0'
info:
  version: '2.0.0'
  title: "Just A Humble Evangelist Test"
  description: |
    A Simple adidas product API for the On-Boarding hackathon.
    [On-Boarding trainings](https://tools.adidas-group.com/confluence/display/DSBP/Engineers+On-Boarding+trainings) hackathon

    ## Affordances
    This API affords the following actions:
    - Retrieve the list of products
    - Retrieve a single product
    - Create a product
    - Update an existing product (status...)
    - Retrieve reviews about a product
    - Add a product review
    - Create a user
    - Retrieve user profile
    - Retrieve the user wishlist
    - Add a product into the wishlist
    - Delete a specific product from the wishlist
    - Clear the wishlist

produces:
  - application/hal+json      # Representation message format
  - application/problem+json  # Error message format

schemes:
  - https

securityDefinitions:
   "API Key":
     type: apiKey
     in: header
     name: Api-Key

security:
  - "API Key": []

paths:
  /:
    x-summary: API Root

    get:
      summary: Retrieve API Root
      description: The API Root contains the initial set of link relations.
      responses:
        200:
          description: The root of the API
          schema:
            $ref: '#/definitions/halRoot'

  /products:
    x-summary: List of Products

    get:
      summary: Retrieve List of Products
      parameters:
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/status' # TODO: define the parameter in the appropriate section
      responses:
        200:
          description: The list of Products
          schema:
            $ref: '#/definitions/halProducts'

    post:
      summary: Create a New Product
      consumes:
        - application/json
      parameters:
        - name: Product
          in: body
          description: Product to be created
          required: true
          schema:
            $ref: '#/definitions/product'
      responses:
        201:
          description: Newly created product
          schema:
            $ref: '#/definitions/halProduct'

  /products/{productId}:
    x-summary: Product

    parameters:
      - name: productId
        in: path
        description: Id of the Product
        required: true
        type: string
        x-example: '1234'

    get:
      summary: Retrieve Product
      description: Retrieve product details
      responses:
        200:
          description: A particular Product
          schema:
            $ref: '#/definitions/halProduct'
        404:
          description: The request Product wasn't found
          headers:
            Content-Type:
              type: string
              default: application/problem+json
          schema:
            $ref: '#/definitions/productNotFound'

    patch:
      summary: Update Product
      description: Update product details
      consumes:
        - application/json
      parameters:
        - name: Product
          in: body
          description: Partial product update
          required: true
          schema:
            $ref: '#/definitions/productPatch'
      responses:
        200:
          description: The Product was updated
          schema:
            $ref: '#/definitions/halProduct'

    delete:
      summary: Delete Product
      produces: []
      responses:
        204:
          description: The Product was deleted
  /products/{productId}/reviews:

    x-summary: List of Product Reviews

    parameters:
      - name: productId
        in: path
        description: Id of the Product
        required: true
        type: string
        x-example: 'DB1124'

    get:
      summary: List product reviews
      description: Retrieve a list of product reviews
      parameters:parameters:
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
      responses:
        200:
          description: The list of Product review
          schema:
            $ref: '#/definitions/halReviews'

    post:
      summary: Create product review
      description: Create a new product review
      consumes:
        - application/json
      parameters:
        - name: Review
          in: body
          description: Review to be created
          required: true
          schema:
            $ref: '#/definitions/review'
      responses:
        201:
          description: Newly created product
          schema:
            $ref: '#/definitions/halReview'

  /products/{productId}/reviews-stats:

    x-summary: List of Product Reviews Stats

    parameters:
      - name: productId
        in: path
        description: Id of the Product
        required: true
        type: string
        x-example: 'DB1124'

    get:
      summary: List product reviews stats
      description: Retrieve a list of product reviews statistics
      parameters:parameters:
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
        - name: granularity
          in: query
          type: string
          enum:
            - years
            - months
            - days
          default: months
      responses:
        200:
          description: The list of Product review
          schema:
            $ref: '#/definitions/halReviewsStats'

    # Add API definition for user creation. It should be a POST action consuming a JSON object user defined in the definitions at the bottom of this file. It should repond with 201 Created for a successful action. Don't forget about the oauth scopes. this one should allow to create new users.
    # -------------------------------------------------------------------------------------------
    # post:
    #   summary: Create a New User

  /users:
    x-summary: Users

    post:
      summary: New user
      description: Create a new user
      consumes:
        - application/json
      parameters:
        - name: User
          in: body
          description: User to be created
          required: true
          schema:
            $ref: '#/definitions/user'
      responses:
        201:
          description: Newly created user
          schema:
            $ref: '#/definitions/halUser'
  
    # This endpoint will require a parameter in it's path. Please define this parameter below. Remember, that the parameter's name has to relate to the one put in the path above. Don't forget about setting its type.
    # -------------------------------------------------------------------------------------------
    # parameters:

  /users/{userId}:
    x-summary: User Profile

    parameters:
      - name: userId
        in: path
        description: Id of the User
        required: true
        type: string
        x-example: 'xxxxx'

    get:
      summary: User Profile
      description: Retrieve user profile details
      responses:
        200:
          description: A particular User Profile
          schema:
            $ref: '#/definitions/halUser'

  /users/{userId}/wishlist:
    x-summary: User Wishlist

    parameters:
      - name: userId
        in: path
        description: Id of the User
        required: true
        type: string
        x-example: '32312'

    get:
      summary: User Wishlist
      description: Retrieve user wishlist
      responses:
        200:
          description: A particular User Wishlist
          schema:
            $ref: '#/definitions/halWishlist'
          
    delete:
      summary: Clear user wishlist
      description: Clear all the products from user wishlist
      responses:
        204:
          description: Wishlist cleared

  /users/{userId}/wishlist/{productId}:
    x-summary: User Product Wishlist

    parameters:
      - name: userId
        in: path
        description: Id of the User
        required: true
        type: string
        x-example: '32312'

      - name: productId
        in: path
        description: Id of the Product
        required: true
        type: string
        x-example: 'DB1124'

    post:
      summary: Add product to the wishlist
      description: Add a product to user wishlist
      consumes:
        - application/json
      parameters:
        - name: Wishlist
          in: body
          description: Wishlist to be added
          required: true
          schema:
            $ref: '#/definitions/wishProduct'
      responses:
        201:
          description: Newly add Wishlist
          schema:
            $ref: '#/definitions/halWishProduct'
        
    delete:
      summary: Delete a product from the wishlist
      description: Delete a product from user wishlist
      responses:
        204:
          description: Wishlist cleared

parameters:
  # adidas API guidelines: Pagination
  offset:
    name: offset
    in: query
    description: Number of results to skip from the start of the list
    required: false
    type: string
    default: '0'
    x-example: '10'

  # adidas API guidelines: Pagination
  limit:
    name: limit
    in: query
    description: The maximum number of reusults to return
    required: false
    type: string
    default: '10'
    x-example: '5'

  # adidas API guidelines: Sparse fieldset
  fields:
    name: fields
    in: query
    description: Comma-separated list of fields to include in the response
    required: false
    type: array
    items:
      type: string
    collectionFormat: csv
    x-example:
      - articleNumber
      - modelNumber

  # adidas API guidelines: Sparse fieldset
  embedded:
    name: embedded
    in: query
    description: Comma-separated list of resource (relations) to embed in the response
    required: false
    type: array
    items:
      type: string
    collectionFormat: csv
    x-example:
      - prices
      - assets

  # TODO: define the status parameter

definitions:
  #
  # API Root
  #
  halRoot:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
    example:
      _links:
        self:
          href: /
        products:
          href: /products

  #
  # Products Resource
  #
  halProducts:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
    example:
      _links:
        self:
          href: /products

        create:
          href: /products

        next:
          href: /products?offset=5&limit=5

        first:
          href: /products?offset=0&limit=5

        last:
          href: /products?offset=40&limit=5

      _embedded:
        product:
          - $ref: '#/definitions/halProduct/example'

  #
  # Product Resource
  #

  # HAL Wrapper
  halProduct:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
      - $ref: '#/definitions/product'
    example:
      _links:
        self:
          href: /products/1234

        edit:
          href: /products/1234

        delete:
          href: /products/1234

        profile:
          href: https://adidas-group.com/gdm/OMS

      productNumber: 1234
      itemCount: 42
      status: pending

  # Partial product update
  productPatch:
    type: object
    allOf:
      - $ref: '#/definitions/product'
    example:
      status: unavailable

  # Product
  product:
    type: object
    properties:
      productNumber:
        type: number
      itemCount:
        type: number
      status:
        type: string
    required:
      - productNumber
      - itemCount
    example:
      productNumber: 42
      itemCount: 3
      status: available

  # Product Not Found Error
  productNotFound:
    type: object
    allOf:
      - $ref: '#/definitions/problemDetail'
    example:
      title: 'Not Found'
      detail: 'Cannot find the requested product'
      status: 404
      instance: '/products/1234'

  #
  # -- DO NOT EDIT BEYOND THIS POINT --
  #

  # Media Types Definitions

  #
  # application/problem+json
  #
  problemDetail:
    type: object
    properties:
      type:
        type: string
      title:
        type: string
      status:
        type: number
      detail:
        type: string
      instance:
        type: string
    required:
      - title
      - detail

  #
  # application/hal+json defintion
  #
  halLinkObject:
    type: object
    required:
      - href
    properties:
      href:
        type: string
      templated:
        type: boolean
      #
      # WARN: Some version of OAS parser can have problem with property being called "type"
      # resulting in the error 'Schema "type" key must be a string'.
      #
      # For this reason we have commented out the "type" property of the link object.
      # See https://tools.ietf.org/html/draft-kelly-json-hal-08#section-5.3 for the definiton of
      # HAL's link object type property.
      #
      # type:
      #  type: string
      deprecation:
        type: string
      name:
        type: string
      profile:
        type: string
      title:
        type: string
      hreflang:
        type: string

  halCuriesLink:
    title: HAL Curies Link
    allOf:
      - type: object
        properties:
          templated:
            enum:
              - true
        required:
          - templated
      - $ref: '#/definitions/halLinkObject'

  halResource:
    title: HAL Resource Object
    type: object
    properties:
      _links:
        type: object
        additionalProperties:
          # WARN: Should be "anyOf" but "anyOf" isn't supported in Swagger 2.0
          allOf:
            - $ref: '#/definitions/halLinkObject'
            - type: array
              items:
                - $ref: '#/definitions/halLinkObject'
        properties:
          curies:
            # WARN: Should be "anyOf" but "anyOf" isn't supported in Swagger 2.0
            allOf:
              - $ref: '#/definitions/halCuriesLink'
              - type: array
                items:
                  - $ref: '#/definitions/halCuriesLink'
      _embedded:
        type: object
        additionalProperties: true
        # WARN: Apiary doesn't support circular references
        # additionalProperties:
        #   anyOf:
        #     - $ref: '#/definitions/hal_resource'
        #     - type: array
        #       items:
        #         - $ref: '#/definitions/hal_resource'